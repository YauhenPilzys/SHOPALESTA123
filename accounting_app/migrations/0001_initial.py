# Generated by Django 4.2.5 on 2023-09-27 08:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Название банка')),
                ('bank_bik', models.CharField(max_length=25, verbose_name='БИК банка')),
            ],
            options={
                'verbose_name': 'Банк',
                'verbose_name_plural': 'Банки',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=255, verbose_name='Название клиента')),
                ('client_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер телефона')),
                ('client_address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('client_unp', models.CharField(max_length=150, verbose_name='УНП')),
                ('client_payment_code', models.CharField(max_length=255, verbose_name='Код платежа')),
                ('client_bank', models.CharField(max_length=255, verbose_name='Банк')),
                ('client_BIK', models.CharField(max_length=255, verbose_name='Баланс')),
                ('client_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена продажи за один товар ')),
                ('expense_quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('expense_nds', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Надбавка ндс %')),
                ('expense_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата продажи')),
            ],
            options={
                'verbose_name': 'Расход',
                'verbose_name_plural': 'Расходы',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255, verbose_name='Название группы')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.IntegerField(default=0, verbose_name='Номер накладной')),
                ('product_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата поступления товара')),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена по накладной')),
                ('product_price_nds', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена с НДС')),
            ],
            options={
                'verbose_name': 'Накладная',
                'verbose_name_plural': 'Накладные',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Название')),
                ('product_vendor', models.CharField(max_length=255, verbose_name='Артикул')),
                ('product_unit', models.CharField(max_length=10, verbose_name='Единица измерения')),
                ('product_description', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('product_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting_app.group')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=255, verbose_name='Название поставщика')),
                ('provider_phone', models.CharField(max_length=25, verbose_name='Номер телефона')),
                ('provider_address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('provider_unp', models.CharField(max_length=255, verbose_name='УНП')),
                ('provider_payment_code', models.CharField(max_length=255, verbose_name='Код платежа')),
                ('provider_bank', models.CharField(max_length=255, verbose_name='Банк')),
                ('provider_BIK', models.CharField(max_length=255, verbose_name='БИК')),
                ('provider_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_quantity', models.PositiveIntegerField(default=0, verbose_name='Количество товара')),
                ('product_country', models.CharField(max_length=255, verbose_name='Страна товара')),
                ('expense_sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена продажи за один товар')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.product')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Price_change',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_change_date', models.DateTimeField(verbose_name='Дата изменения цены')),
                ('price_change_new', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Новая цена')),
                ('expense_sale_price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.expense')),
                ('product_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.product')),
            ],
            options={
                'verbose_name': 'Изменение цены',
                'verbose_name_plural': 'Изменение цены',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='providers',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.provider'),
        ),
        migrations.AddField(
            model_name='expense',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting_app.product'),
        ),
    ]
